#include <iostream>
using namespace std;

#define Max 10
int queue[Max];
int front = -1;
int rear = -1;

class Pizza {
public:
    string type, size, topping; 
    int quantity;
    
    void accept();
    int bill(); 
    void display(int orderIndex); 
};

Pizza P[Max]; 

void Pizza::accept() {
    cout << "Enter the type of pizza you want: ";
    cin >> type;
    cout << "Enter the size of pizza [Small, Medium, Large]: ";
    cin >> size;
    cout << "Enter the topping of pizza: ";
    cin >> topping;
    cout << "Enter the quantity of pizza: ";
    cin >> quantity;
}

int Pizza::bill() {
    if (size == "Small") {
        return quantity * 200;
    } else if (size == "Medium") {
        return quantity * 300;
    } else {
        return quantity * 400;
    }
}

void Pizza::display(int orderIndex) {
    cout << "Order " << orderIndex + 1 << " - Type: " << type 
         << ", Topping: " << topping << ", Size: " << size 
         << ", Quantity: " << quantity << ", Price: " << bill() << endl;
}

int main() {
    int ch, n;

    cout << "Enter total number of orders you want to place [max 10]: ";
    cin >> n;
    n = (n > Max) ? Max : n; 

    do {
        cout << "\nEnter your choice:";
        cout << "\n1. Order pizza";
        cout << "\n2. Delete order which has been served";
        cout << "\n3. Display orders";
        cout << "\n4. Exit";
        cin >> ch;

        switch (ch) {
            case 1:
                if (rear == Max - 1) {
                    cout << "\nSorry, we can't take orders now...";
                } else {
                    rear++;
                    P[rear].accept();
                    queue[rear] = rear; 
                    if (front == -1) {
                        front = 0;
                    }
                }
                break;
            case 2:
                if (front == -1) {
                    cout << "\nNo order placed.";
                } else {
                    cout << "Order " << queue[front] + 1 << " served successfully!" << endl;
                    front++;
                    if (front > rear) {
                        front = rear = -1; 
                    }
                }
                break;
            case 3:
                for (int i = front; i <= rear; i++) {
                    P[queue[i]].display(i); 
                }
                break;
            case 4:
                cout << "\nExiting....!";
                break;
            default:
                cout << "\nInvalid choice! Please try again.";
                break;
        }
    } while (ch != 4);

    return 0;
}
